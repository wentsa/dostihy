/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import gui.plocha.HerniPlochaController;
import gui.plocha.HerniPlochaView;
import java.awt.EventQueue;
import java.beans.PropertyChangeEvent;
import java.io.IOException;
import java.io.Serializable;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.concurrent.ExecutionException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.SwingWorker;
import pomocne.Konstanty;

/**
 *
 * @author wentsa
 */
public class ProgressBar extends javax.swing.JPanel implements Serializable {
    
    private static final long serialVersionUID = -4552914890608442546L;
    
    private final ResourceBundle bundle = ResourceBundle.getBundle("languages/gui/GUI", Konstanty.DEFAULT_LOCALE);
    
    private HerniPlochaView plocha;
    private Vysledky vysledky;
    private JPanel jPanel2;
    private HlavniOkno okno;
    
    ProgressBar() {
        initComponents();
        setVisible(true);
    }
    
    void setAttributes(HlavniOkno okno, JPanel jPanel2) {
        this.jPanel2 = jPanel2;
        this.okno = okno;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bar = new javax.swing.JProgressBar();
        label = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        setMinimumSize(new java.awt.Dimension(400, 81));

        bar.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));

        label.setText(bundle.getString("GAME_IS_LOADING")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label)
                        .addGap(0, 335, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar bar;
    private javax.swing.JLabel label;
    // End of variables declaration//GEN-END:variables

    public JProgressBar getBar() {
        return bar;
    }
    
    public void nacti() throws InterruptedException {
        Task task = new Task();
        task.doInBackground();
        try {
            task.get();
        } catch (ExecutionException ex) {
            Logger.getLogger(ProgressBar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    class Task extends SwingWorker<Void, Void> {
        
        @Override
        public Void doInBackground() {
            setProgress(0);
            plocha = HerniPlochaController.getInstance().getView();
            System.out.println("60");
            setProgress(60);
            vysledky = new Vysledky();
            System.out.println("80");
            setProgress(80);
            jPanel2.add(plocha, "plocha");
            jPanel2.add(vysledky, "vysledky");
            System.out.println("100");
            setProgress(100);
            return null;
        }
        
        @Override
        public void done() {
            okno.setPlocha(plocha);
            okno.setVysledky(vysledky);
            System.out.println("done");
        }
        
    }
    
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress" == evt.getPropertyName()) {
            int progress = (Integer) evt.getNewValue();
            bar.setValue(progress);
        }
    }
    
    public static void main(String[] args) throws InterruptedException, IOException, ClassNotFoundException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HlavniOkno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Konstanty.DEFAULT_LOCALE = new Locale("cs", "CZ");
                JFrame f = new JFrame();
                f.add(new ProgressBar());
                f.pack();
                f.setVisible(true);
            }
        });
    }
}
